{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { List } from \"react-native-paper\";\nimport { IconButton } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar StaffListScreen = function StaffListScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var staff = route.staff;\n  var _useState = useState([{\n      id: 1,\n      name: \"John Smith\",\n      phoneNumber: \"02 9988 2211\",\n      address: {\n        street: \"1 Code Lane\",\n        city: \"Javaville\",\n        state: \"NSW\",\n        postalCode: \"0100\",\n        country: \"Australia\"\n      }\n    }, {\n      id: 2,\n      name: \"Sue White\",\n      phoneNumber: \"03 8899 2255\",\n      address: {\n        street: \"16 Bit Way\",\n        city: \"Byte Cove\",\n        state: \"QLD\",\n        postalCode: \"1101\",\n        country: \"Australia\"\n      }\n    }, {\n      id: 3,\n      name: \"Bob O’Bits\",\n      phoneNumber: \"05 7788 2255\",\n      address: {\n        street: \"8 Silicon Road\",\n        city: \"Cloud Hills\",\n        state: \"VIC\",\n        postalCode: \"1001\",\n        country: \"Australia\"\n      }\n    }, {\n      id: 4,\n      name: \"Mary Blue\",\n      phoneNumber: \"06 4455 9988\",\n      address: {\n        street: \"4 Processor Boulevard\",\n        city: \"Appletson\",\n        state: \"NT\",\n        postalCode: \"1010\",\n        country: \"Australia\"\n      }\n    }, {\n      id: 5,\n      name: \"Mick Green\",\n      phoneNumber: \"02 9988 1122\",\n      address: {\n        street: \"700 Bandwidth Street\",\n        city: \"Bufferland\",\n        state: \"NSW\",\n        postalCode: \"0110\",\n        country: \"Australia\"\n      }\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    staffData = _useState2[0],\n    setStaffData = _useState2[1];\n  debugger;\n  var _useState3 = useState(staffData),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    debugger;\n    var newData = staffData;\n    setData(newData);\n    setRefreshing(false);\n  };\n  var addNewStaff = function addNewStaff(updatedData) {\n    var newStaffId = staffData.length + 1;\n    debugger;\n    var newStaffMember = {\n      id: newStaffId,\n      name: updatedData.name,\n      phoneNumber: updatedData.phoneNumber,\n      address: {\n        street: updatedData.street,\n        city: updatedData.city,\n        state: updatedData.state,\n        postalCode: updatedData.postalCode,\n        country: updatedData.country\n      }\n    };\n    debugger;\n    staffData.push(newStaffMember);\n  };\n  if (route.params != null) {\n    debugger;\n    var updateStaffById = function updateStaffById(updatedData) {\n      var staffIndex = staffData.findIndex(function (staff) {\n        return staff.id === updatedData.id;\n      });\n      if (staffIndex !== -1) {\n        staffData[staffIndex].name = updatedData.name;\n        staffData[staffIndex].phoneNumber = updatedData.phoneNumber;\n        staffData[staffIndex].address.street = updatedData.street;\n        staffData[staffIndex].address.city = updatedData.city;\n        staffData[staffIndex].address.state = updatedData.state;\n        staffData[staffIndex].address.postalCode = updatedData.postalCode;\n        staffData[staffIndex].address.country = updatedData.country;\n      } else {\n        debugger;\n        addNewStaff(updatedData);\n      }\n    };\n    updateStaffById({\n      id: route.params.newStaff.id,\n      name: route.params.newStaff.name,\n      phoneNumber: route.params.newStaff.phoneNumber,\n      street: route.params.newStaff.street,\n      city: route.params.newStaff.city,\n      state: route.params.newStaff.state,\n      postalCode: route.params.newStaff.postalcode,\n      country: route.params.newStaff.country\n    });\n    route.params = null;\n  }\n  var handleSave = function handleSave() {\n    navigation.navigate(\"AddUpdateStaffScreen\");\n  };\n  var handleDeletePress = function handleDeletePress(i) {\n    debugger;\n    staffData = staffData.filter(function (item) {\n      return item.id !== i.id;\n    });\n    onRefresh();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.row,\n      children: _jsxs(Text, {\n        style: styles.text,\n        children: [\" \", _jsx(Image, {\n          source: require(\"../Icons/roi-image-resources/roi-logo.jpg\"),\n          style: styles.logo,\n          resizeMode: \"contain\"\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.row,\n      children: _jsx(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(List.Item, {\n            title: item.name,\n            onPress: function onPress() {\n              return navigation.navigate(\"StaffDetails\", {\n                staff: item\n              });\n            },\n            right: function right() {\n              return _jsx(List.Item, {\n                title: \"Delete\",\n                onPress: function onPress() {\n                  return handleDeletePress(item);\n                }\n              });\n            }\n          });\n        },\n        refreshControl: _jsx(RefreshControl, {\n          refreshing: refreshing,\n          onRefresh: onRefresh\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(IconButton, {\n        icon: \"plus\",\n        size: 32,\n        color: \"black\",\n        onPress: handleSave\n      }), _jsx(Button, {\n        title: \"Manual Refresh\",\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        onPress: onRefresh\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 16,\n    flexDirection: \"row\"\n  },\n  logo: {\n    width: 50,\n    height: 60,\n    flexDirection: \"row\"\n  },\n  row: {\n    flexDirection: \"row\",\n    marginBottom: 10\n  },\n  text: {\n    padding: 10,\n    marginRight: 10\n  }\n});\nexport default StaffListScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","StyleSheet","Image","RefreshControl","Button","List","IconButton","jsx","_jsx","jsxs","_jsxs","StaffListScreen","_ref","route","navigation","staff","_useState","id","name","phoneNumber","address","street","city","state","postalCode","country","_useState2","_slicedToArray","staffData","setStaffData","_useState3","_useState4","data","setData","_useState5","_useState6","refreshing","setRefreshing","onRefresh","newData","addNewStaff","updatedData","newStaffId","length","newStaffMember","push","params","updateStaffById","staffIndex","findIndex","newStaff","postalcode","handleSave","navigate","handleDeletePress","i","filter","item","style","styles","container","children","row","text","source","require","logo","resizeMode","keyExtractor","toString","renderItem","_ref2","Item","title","onPress","right","refreshControl","icon","size","color","fontSize","fontWeight","justifyContent","alignItems","create","flex","padding","marginBottom","flexDirection","width","height","marginRight"],"sources":["C:/Users/Ali/Desktop/MyDrive/Ali/Tafe/Mobile/Projrct2/RoiFrontend/src/screens/StaffListScreen.js"],"sourcesContent":["// screens/StaffListScreen.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, Text, FlatList, StyleSheet, Image,RefreshControl,Button  } from \"react-native\";\r\nimport { List } from \"react-native-paper\";\r\nimport { IconButton } from \"react-native-paper\";\r\n// Example of a relative path\r\n\r\nconst StaffListScreen = ({ route, navigation }) => {\r\n  const { staff } = route;\r\n  var [staffData, setStaffData] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"John Smith\",\r\n      phoneNumber: \"02 9988 2211\",\r\n      address: {\r\n        street: \"1 Code Lane\",\r\n        city: \"Javaville\",\r\n        state: \"NSW\",\r\n        postalCode: \"0100\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Sue White\",\r\n      phoneNumber: \"03 8899 2255\",\r\n      address: {\r\n        street: \"16 Bit Way\",\r\n        city: \"Byte Cove\",\r\n        state: \"QLD\",\r\n        postalCode: \"1101\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Bob O’Bits\",\r\n      phoneNumber: \"05 7788 2255\",\r\n      address: {\r\n        street: \"8 Silicon Road\",\r\n        city: \"Cloud Hills\",\r\n        state: \"VIC\",\r\n        postalCode: \"1001\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Mary Blue\",\r\n      phoneNumber: \"06 4455 9988\",\r\n      address: {\r\n        street: \"4 Processor Boulevard\",\r\n        city: \"Appletson\",\r\n        state: \"NT\",\r\n        postalCode: \"1010\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Mick Green\",\r\n      phoneNumber: \"02 9988 1122\",\r\n      address: {\r\n        street: \"700 Bandwidth Street\",\r\n        city: \"Bufferland\",\r\n        state: \"NSW\",\r\n        postalCode: \"0110\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    // Add more staff profiles as needed\r\n  ]);\r\ndebugger\r\n  const [data, setData] = useState(staffData);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\ndebugger\r\n    // Perform your data filtering logic here\r\n    // For example, filter out 'item3'\r\n    const newData = staffData\r\n    setData(newData);\r\n\r\n    setRefreshing(false);\r\n  };\r\n\r\n\r\n\r\n  const addNewStaff = (updatedData) => {\r\n    const newStaffId = staffData.length + 1;\r\n\r\n    debugger;\r\n    const newStaffMember = {\r\n      id: newStaffId,\r\n      name: updatedData.name,\r\n      phoneNumber: updatedData.phoneNumber,\r\n      address: {\r\n        street: updatedData.street,\r\n        city: updatedData.city,\r\n        state: updatedData.state,\r\n        postalCode: updatedData.postalCode,\r\n        country: updatedData.country,\r\n      },\r\n    };\r\n\r\n    debugger;\r\n\r\n    staffData.push(newStaffMember);\r\n  };\r\n\r\n  if (route.params != null) {\r\n    debugger;\r\n\r\n    const updateStaffById = (updatedData) => {\r\n      const staffIndex = staffData.findIndex(\r\n        (staff) => staff.id === updatedData.id\r\n      );\r\n      if (staffIndex !== -1) {\r\n        staffData[staffIndex].name = updatedData.name;\r\n        staffData[staffIndex].phoneNumber = updatedData.phoneNumber;\r\n        staffData[staffIndex].address.street = updatedData.street;\r\n        staffData[staffIndex].address.city = updatedData.city;\r\n        staffData[staffIndex].address.state = updatedData.state;\r\n        staffData[staffIndex].address.postalCode = updatedData.postalCode;\r\n        staffData[staffIndex].address.country = updatedData.country;\r\n      } else {\r\n        debugger;\r\n        addNewStaff(updatedData);\r\n      }\r\n    };\r\n    updateStaffById({\r\n      id: route.params.newStaff.id,\r\n      name: route.params.newStaff.name,\r\n      phoneNumber: route.params.newStaff.phoneNumber,\r\n      street: route.params.newStaff.street,\r\n      city: route.params.newStaff.city,\r\n      state: route.params.newStaff.state,\r\n      postalCode: route.params.newStaff.postalcode,\r\n      country: route.params.newStaff.country,\r\n    });\r\n\r\n    route.params = null;\r\n  }\r\n\r\n  const handleSave = () => {\r\n    navigation.navigate(\"AddUpdateStaffScreen\");\r\n  };\r\nconst handleDeletePress=(i)=>\r\n{\r\n  debugger\r\n \r\n\r\n \r\n    staffData = staffData.filter(item => item.id !== i.id);\r\n    onRefresh();\r\n  \r\n}\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* First Row */}\r\n      <View style={styles.row}>\r\n        <Text style={styles.text}>\r\n          {\" \"}\r\n          <Image\r\n            source={require(\"../Icons/roi-image-resources/roi-logo.jpg\")}\r\n            style={styles.logo}\r\n            resizeMode=\"contain\"\r\n          />\r\n          {/* <Text style={styles.title}>ROI Staff Employees</Text> */}\r\n        </Text>\r\n      </View>\r\n\r\n      {/* Second Row */}\r\n      <View style={styles.row}>\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          renderItem={({ item }) => (\r\n            <List.Item\r\n              title={item.name}\r\n              onPress={() =>\r\n                navigation.navigate(\"StaffDetails\", { staff: item })\r\n              }\r\n\r\n              right={() => (\r\n                <List.Item\r\n                  title=\"Delete\"\r\n                  onPress={() => handleDeletePress(item)}\r\n                />\r\n              )}\r\n\r\n\r\n            />\r\n          )}\r\n          refreshControl={\r\n            <RefreshControl\r\n              refreshing={refreshing}\r\n              onRefresh={onRefresh}\r\n            />\r\n          }\r\n        />\r\n        {/* <Text style={styles.text}>Item 4</Text> */}\r\n      </View>\r\n      \r\n        <View style={styles.row}>\r\n          <IconButton\r\n            icon=\"plus\"\r\n            size={32}\r\n            color=\"black\"\r\n            onPress={handleSave}\r\n          />\r\n\r\n<Button title=\"Manual Refresh\" style={{ fontSize: 20, fontWeight: \"bold\" ,justifyContent: \"center\", alignItems: \"center\"}} onPress={onRefresh} />\r\n    \r\n        </View>\r\n     \r\n  \r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    flexDirection: \"row\",\r\n  },\r\n  logo: {\r\n    width: 50,\r\n    height: 60,\r\n    flexDirection: \"row\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    padding: 10,\r\n\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default StaffListScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}