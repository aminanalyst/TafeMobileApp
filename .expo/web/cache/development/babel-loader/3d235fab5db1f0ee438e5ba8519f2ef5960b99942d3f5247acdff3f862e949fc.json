{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { List } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar StaffListScreen = function StaffListScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var staff = route.staff;\n  var _useState = useState([{\n      id: 1,\n      name: \"John Smith\",\n      phoneNumber: \"02 9988 2211\",\n      address: {\n        street: \"1 Code Lane\",\n        city: \"Javaville\",\n        state: \"NSW\",\n        postalCode: \"0100\",\n        country: \"Australia\"\n      }\n    }, {\n      id: 2,\n      name: \"Sue White\",\n      phoneNumber: \"03 8899 2255\",\n      address: {\n        street: \"16 Bit Way\",\n        city: \"Byte Cove\",\n        state: \"QLD\",\n        postalCode: \"1101\",\n        country: \"Australia\"\n      }\n    }, {\n      id: 3,\n      name: \"Bob O’Bits\",\n      phoneNumber: \"05 7788 2255\",\n      address: {\n        street: \"8 Silicon Road\",\n        city: \"Cloud Hills\",\n        state: \"VIC\",\n        postalCode: \"1001\",\n        country: \"Australia\"\n      }\n    }, {\n      id: 4,\n      name: \"Mary Blue\",\n      phoneNumber: \"06 4455 9988\",\n      address: {\n        street: \"4 Processor Boulevard\",\n        city: \"Appletson\",\n        state: \"NT\",\n        postalCode: \"1010\",\n        country: \"Australia\"\n      }\n    }, {\n      id: 5,\n      name: \"Mick Green\",\n      phoneNumber: \"02 9988 1122\",\n      address: {\n        street: \"700 Bandwidth Street\",\n        city: \"Bufferland\",\n        state: \"NSW\",\n        postalCode: \"0110\",\n        country: \"Australia\"\n      }\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    staffData = _useState2[0],\n    setStaffData = _useState2[1];\n  var addNewStaff = function addNewStaff() {\n    var newStaffId = staffData.length + 1;\n    var newStaffMember = {\n      id: newStaffId,\n      name: \"df d\",\n      phoneNumber: \"02 2343 2211\",\n      address: {\n        street: \"1 Code Lane\",\n        city: \"23423r3fdsd\",\n        state: \"sdf\",\n        postalCode: \"434\",\n        country: \"sdgswrh\"\n      }\n    };\n    debugger;\n    staffData.push(newStaffMember);\n  };\n  if (route.params != null) {\n    var updateStaffById = function updateStaffById(updatedData) {\n      staffData;\n      var staffIndex = staffData.findIndex(function (staff) {\n        return staff.id === updatedData.id;\n      });\n      if (staffIndex !== -1) {\n        staffData[staffIndex].name = updatedData.name;\n        staffData[staffIndex].phoneNumber = updatedData.phoneNumber;\n        staffData[staffIndex].address.street = updatedData.street;\n        staffData[staffIndex].address.city = updatedData.city;\n        staffData[staffIndex].address.state = updatedData.state;\n        staffData[staffIndex].address.postalCode = updatedData.postalCode;\n        staffData[staffIndex].address.country = updatedData.country;\n      } else {\n        addNewStaff();\n      }\n    };\n    updateStaffById({\n      id: route.params.newStaff.id,\n      name: route.params.newStaff.name,\n      phoneNumber: route.params.newStaff.phoneNumber,\n      street: route.params.newStaff.street,\n      city: route.params.newStaff.city,\n      state: route.params.newStaff.state,\n      postalCode: route.params.newStaff.postalcode,\n      country: route.params.newStaff.country\n    });\n    route.params = null;\n  }\n  var handleSave = function handleSave() {\n    navigation.navigate(\"AddUpdateStaffScreen\");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.row,\n      children: _jsxs(Text, {\n        style: styles.text,\n        children: [\" \", _jsx(Image, {\n          source: require(\"../Icons/roi-image-resources/roi-logo.jpg\"),\n          style: styles.logo,\n          resizeMode: \"contain\"\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.row,\n      children: _jsx(FlatList, {\n        data: staffData,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(List.Item, {\n            title: item.name,\n            onPress: function onPress() {\n              return navigation.navigate(\"StaffDetails\", {\n                staff: item\n              });\n            }\n          });\n        }\n      })\n    }), _jsx(View, {\n      style: styles.row,\n      children: _jsx(IconButton, {\n        icon: \"content-save\",\n        onPress: handleSave\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 16,\n    flexDirection: \"row\"\n  },\n  logo: {\n    width: 50,\n    height: 60,\n    flexDirection: \"row\"\n  },\n  row: {\n    flexDirection: \"row\",\n    marginBottom: 10\n  },\n  text: {\n    padding: 10,\n    marginRight: 10\n  }\n});\nexport default StaffListScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","StyleSheet","Image","List","jsx","_jsx","jsxs","_jsxs","StaffListScreen","_ref","route","navigation","staff","_useState","id","name","phoneNumber","address","street","city","state","postalCode","country","_useState2","_slicedToArray","staffData","setStaffData","addNewStaff","newStaffId","length","newStaffMember","push","params","updateStaffById","updatedData","staffIndex","findIndex","newStaff","postalcode","handleSave","navigate","style","styles","container","children","row","text","source","require","logo","resizeMode","data","keyExtractor","item","toString","renderItem","_ref2","Item","title","onPress","IconButton","icon","create","flex","padding","fontSize","fontWeight","marginBottom","flexDirection","width","height","marginRight"],"sources":["C:/Users/Ali/Desktop/MyDrive/Ali/Tafe/Mobile/Projrct2/RoiFrontend/src/screens/StaffListScreen.js"],"sourcesContent":["// screens/StaffListScreen.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, Text, FlatList, StyleSheet, Image } from \"react-native\";\r\nimport { List } from \"react-native-paper\";\r\n// Example of a relative path\r\n \r\nconst StaffListScreen = ({ route, navigation }) => {\r\n  const { staff } = route;\r\n  const [staffData, setStaffData] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"John Smith\",\r\n      phoneNumber: \"02 9988 2211\",\r\n      address: {\r\n        street: \"1 Code Lane\",\r\n        city: \"Javaville\",\r\n        state: \"NSW\",\r\n        postalCode: \"0100\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Sue White\",\r\n      phoneNumber: \"03 8899 2255\",\r\n      address: {\r\n        street: \"16 Bit Way\",\r\n        city: \"Byte Cove\",\r\n        state: \"QLD\",\r\n        postalCode: \"1101\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Bob O’Bits\",\r\n      phoneNumber: \"05 7788 2255\",\r\n      address: {\r\n        street: \"8 Silicon Road\",\r\n        city: \"Cloud Hills\",\r\n        state: \"VIC\",\r\n        postalCode: \"1001\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Mary Blue\",\r\n      phoneNumber: \"06 4455 9988\",\r\n      address: {\r\n        street: \"4 Processor Boulevard\",\r\n        city: \"Appletson\",\r\n        state: \"NT\",\r\n        postalCode: \"1010\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Mick Green\",\r\n      phoneNumber: \"02 9988 1122\",\r\n      address: {\r\n        street: \"700 Bandwidth Street\",\r\n        city: \"Bufferland\",\r\n        state: \"NSW\",\r\n        postalCode: \"0110\",\r\n        country: \"Australia\",\r\n      },\r\n    },\r\n    // Add more staff profiles as needed\r\n  ]);\r\n\r\n\r\n  const addNewStaff = () => {\r\n    // Generate a new unique id for the new staff member\r\n    const newStaffId = staffData.length + 1;\r\n\r\n    // Create the new staff member object\r\n    const newStaffMember = {\r\n      id: newStaffId,\r\n      name: \"df d\",\r\n      phoneNumber: \"02 2343 2211\",\r\n      address: {\r\n        street: \"1 Code Lane\",\r\n        city: \"23423r3fdsd\",\r\n        state: \"sdf\",\r\n        postalCode: \"434\",\r\n        country: \"sdgswrh\",\r\n      }\r\n    };\r\n\r\n\r\n \r\n    debugger\r\n    \r\n    staffData.push(newStaffMember)\r\n\r\n  };\r\n\r\n\r\n  if (route.params != null) {\r\n   \r\n\r\n    const updateStaffById = ( updatedData) => {\r\n     \r\n      staffData;\r\n      // const staffWithIdOne = staffData.find((staff) => staff.id === 1);\r\n\r\n      const staffIndex = staffData.findIndex((staff) => staff.id === updatedData.id);\r\n \r\n      if (staffIndex !== -1) {\r\n        \r\n        staffData[staffIndex].name = updatedData.name;\r\n        staffData[staffIndex].phoneNumber = updatedData.phoneNumber;\r\n        staffData[staffIndex].address.street = updatedData.street;\r\n        staffData[staffIndex].address.city = updatedData.city;\r\n        staffData[staffIndex].address.state = updatedData.state;\r\n        staffData[staffIndex].address.postalCode = updatedData.postalCode;\r\n        staffData[staffIndex].address.country = updatedData.country;\r\n      }\r\n      else{\r\n        \r\n    \r\n        addNewStaff();\r\n      \r\n\r\n      }\r\n    };\r\n    updateStaffById(\r\n      { id: route.params.newStaff.id ,\r\n       name: route.params.newStaff.name  ,\r\n       phoneNumber: route.params.newStaff.phoneNumber ,\r\n       street: route.params.newStaff.street ,\r\n       city: route.params.newStaff.city ,\r\n       state: route.params.newStaff.state ,\r\n       postalCode: route.params.newStaff.postalcode ,\r\n       country: route.params.newStaff.country }\r\n    );\r\n \r\n    route.params = null;\r\n  }\r\n\r\n  const handleSave = () => {\r\n   \r\n    \r\n    navigation.navigate(\"AddUpdateStaffScreen\"  );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* First Row */}\r\n      <View style={styles.row}>\r\n        <Text style={styles.text}>\r\n          {\" \"}\r\n          <Image\r\n            source={require(\"../Icons/roi-image-resources/roi-logo.jpg\")}\r\n            style={styles.logo}\r\n            resizeMode=\"contain\"\r\n          />\r\n          {/* <Text style={styles.title}>ROI Staff Employees</Text> */}\r\n        </Text>\r\n      </View>\r\n\r\n      {/* Second Row */}\r\n      <View style={styles.row}>\r\n        <FlatList\r\n          data={staffData}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          renderItem={({ item }) => (\r\n            <List.Item\r\n              title={item.name}\r\n              onPress={() =>\r\n                navigation.navigate(\"StaffDetails\", { staff: item })\r\n              }\r\n            />\r\n          )}\r\n        />\r\n        {/* <Text style={styles.text}>Item 4</Text> */}\r\n      </View>\r\n    {  <View style={styles.row}>\r\n    <IconButton icon=\"content-save\" onPress={handleSave} />\r\n    </View>  }\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 16,\r\n    flexDirection: \"row\",\r\n  },\r\n  logo: {\r\n    width: 50,\r\n    height: 60,\r\n    flexDirection: \"row\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 10,\r\n  },\r\n  text: {\r\n    padding: 10,\r\n\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default StaffListScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}