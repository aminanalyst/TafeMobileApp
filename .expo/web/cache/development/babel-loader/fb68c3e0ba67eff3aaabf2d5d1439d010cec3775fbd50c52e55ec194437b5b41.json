{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddUpdateStaffScreen = function AddUpdateStaffScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    staffName = _useState2[0],\n    setStaffName = _useState2[1];\n  var handleSave = function handleSave() {\n    var newStaff = {\n      id: Math.random(),\n      name: staffName\n    };\n    navigation.navigate('StaffList', {\n      newStaff: newStaff\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Add Staff\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter Staff Name\",\n      value: staffName,\n      onChangeText: function onChangeText(text) {\n        return setStaffName(text);\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 16,\n    padding: 8\n  }\n});\nexport default AddUpdateStaffScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","jsx","_jsx","jsxs","_jsxs","AddUpdateStaffScreen","_ref","navigation","_useState","_useState2","_slicedToArray","staffName","setStaffName","handleSave","newStaff","id","Math","random","name","navigate","style","styles","container","children","title","input","placeholder","value","onChangeText","text","create","flex","padding","fontSize","marginBottom","height","borderColor","borderWidth"],"sources":["C:/Users/Ali/Desktop/MyDrive/Ali/Tafe/Mobile/Projrct2/RoiFrontend/src/screens/AddUpdateStaffScreen.js"],"sourcesContent":["// // // src/screens/AddUpdateStaffScreen.js\r\n// // import React from 'react';\r\n// // import { View, Text } from 'react-native';\r\n\r\n// // const AddUpdateStaffScreen = () => {\r\n// //   return (\r\n// //     <View>\r\n// //       <Text>Add/Update Staff Screen</Text>\r\n// //     </View>\r\n// //   );\r\n// // };\r\n\r\n// // export default AddUpdateStaffScreen;\r\n\r\n\r\n\r\n\r\n// AddUpdateStaffScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\n\r\nconst AddUpdateStaffScreen = ({ navigation }) => {\r\n  const [staffName, setStaffName] = useState('');\r\n\r\n  const handleSave = () => {\r\n    // Save the new staff profile to the backend API or local storage\r\n    // You may also want to add validation before saving\r\n    const newStaff = { id: Math.random(), name: staffName };\r\n    // Update the staff list on the StaffListScreen\r\n    navigation.navigate('StaffList', { newStaff });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Add Staff</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Enter Staff Name\"\r\n        value={staffName}\r\n        onChangeText={(text) => setStaffName(text)}\r\n      />\r\n      {/* <Button title=\"Save\" onPress={handleSave} /> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    marginBottom: 16,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 16,\r\n    padding: 8,\r\n  },\r\n});\r\n\r\nexport default AddUpdateStaffScreen;\r\n"],"mappings":";AAkBA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACxC,IAAAC,SAAA,GAAkCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IAGvB,IAAMC,QAAQ,GAAG;MAAEC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC;MAAEC,IAAI,EAAEP;IAAU,CAAC;IAEvDJ,UAAU,CAACY,QAAQ,CAAC,WAAW,EAAE;MAAEL,QAAQ,EAARA;IAAS,CAAC,CAAC;EAChD,CAAC;EAED,OACEV,KAAA,CAACR,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BrB,IAAA,CAACL,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAS,CAAM,CAAC,EAC3CrB,IAAA,CAACJ,SAAS;MACRsB,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEhB,SAAU;MACjBiB,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKjB,YAAY,CAACiB,IAAI,CAAC;MAAA;IAAC,CAC5C,CAAC;EAAA,CAEE,CAAC;AAEX,CAAC;AAED,IAAMR,MAAM,GAAGrB,UAAU,CAAC8B,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDR,KAAK,EAAE;IACLS,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDT,KAAK,EAAE;IACLU,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdH,YAAY,EAAE,EAAE;IAChBF,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,eAAe3B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}